version: 2

# NOTE:
#   Disk cache:
#       We don't want to keep old artifacts around so we always build from
#       scratch on master builds and upload the new cache afterwards. Because
#       Circle doesn't allow skipping a "restore_cache" we create a dummy
#       "empty" cache that's only ever pulled on master. Alternatively we could
#       ask Bazel to clean up old items (LRU style):
#           https://docs.bazel.build/versions/master/remote-caching.html
#       It also appears that there's ongoing work but the feature is not ready:
#           https://github.com/bazelbuild/bazel/issues/5139

jobs:
  build-darwin:
    macos:
      xcode: "10.0"
    steps:
      - run:
          name: Checkout
          command: |
            git --version
            git clone -n https://github.com/tweag/sparkle.git .
            git checkout $CIRCLE_SHA1

      - run:
          name: Install Nix
          command: |
            HOMEBREW_NO_AUTO_UPDATE=1 brew install xz
            curl -L https://nixos.org/nix/install | sh

      - run:
          name: Install cachix
          shell: /bin/bash -eilo pipefail
          command: |
            nix-env -iA cachix -f https://github.com/NixOS/nixpkgs/tarball/db557aab7b690f5e0e3348459f2e4dc8fd0d9298

      - run:
          name: Run cachix
          shell: /bin/bash -eilo pipefail
          command: |
            cachix use tweag
            cachix push tweag --watch-store
          background: true

      - run:
          name: Configure
          command: |
            mkdir -p ~/.cache/bazel/

            cp .bazelrc .bazelrc.orig
            echo try-import .bazelrc.local > .bazelrc

            echo build --host_platform=@io_tweag_rules_nixpkgs//nixpkgs/platforms:host > .bazelrc.local

      - restore_cache:
          keys: # see note about 'Disk cache'
              - v1-sparkle-empty-{{ .Branch }}-
              - v1-sparkle-cache-{{ .Branch }}-
              - v1-sparkle-cache-master-

      - run:
          name: Prefetch Stackage snapshot
          shell: /bin/bash -eilo pipefail
          command: |
            # Retry if needed due to network flakiness.
            nix-shell --pure --run \
              'cmd="bazel fetch @stackage//..."; $cmd || $cmd || $cmd'
      - run:
          name: Build all
          shell: /bin/bash -eilo pipefail
          command: |
            cp .bazelrc.orig .bazelrc
            # Keep CI awake
            while true; do echo "."; sleep 60; done &

            nix-shell --pure --run 'bazel build //apps/hello:sparkle-example-hello_deploy.jar'
            nix-shell --pure --run 'bazel build //apps/rdd-ops:sparkle-example-rddops_deploy.jar'
            nix-shell --pure --run 'bazel build //apps/osthreads:sparkle-example-osthreads_deploy.jar'
      - run:
          name: Install spark and hadoop
          command: |
            # We roll our own installation of spark in OSX since nixpkgs doesn't support building hadoop
            curl -O https://repo1.maven.org/maven2/org/slf4j/slf4j-api/1.7.30/slf4j-api-1.7.30.jar
            curl https://downloads.apache.org/hadoop/common/hadoop-2.10.1/hadoop-2.10.1.tar.gz | tar -xz
            curl https://downloads.apache.org/spark/spark-2.4.7/spark-2.4.7-bin-without-hadoop.tgz | tar -xz

      - run:
          name: Run tests
          shell: /bin/bash -eilo pipefail
          command: |
            export SPARK_DIST_CLASSPATH=$PWD/slf4j-api-1.7.30.jar:$(hadoop-2.10.1/bin/hadoop classpath)
            export PATH="$PWD/spark-2.4.7-bin-without-hadoop/bin:$PATH"
            spark-submit --packages com.amazonaws:aws-java-sdk:1.11.920,org.apache.hadoop:hadoop-aws:2.8.4 bazel-bin/apps/hello/sparkle-example-hello_deploy.jar
            spark-submit bazel-bin/apps/osthreads/sparkle-example-osthreads_deploy.jar | tee out.txt || grep "Job |           pool | start time (s) | end time (s)" out.txt
            spark-submit bazel-bin/apps/rdd-ops/sparkle-example-rddops_deploy.jar

        # see note about 'Disk cache'
      - save_cache:
          key: v1-inline-java-cache-{{ .Branch }}-{{ .BuildNum }}
          paths:
              - ~/.cache/bazel/

      - run:
          name: Clean up cache
          shell: /bin/bash -eilo pipefail
          command: |
            rm -rf ~/.cache/bazel/
            mkdir -p ~/.cache/bazel/

      - save_cache:
          key: v1-inline-java-empty-master-{{ .BuildNum }}
          paths:
              - ~/.cache/bazel/

workflows:
  version: 2
  build:
    jobs:
      - build-darwin
  publish:
    jobs:
      - publish:
          context: org-global
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v.*/
